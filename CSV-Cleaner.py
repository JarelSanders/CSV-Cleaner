import pandas as pd
import numpy as np

"""Reads/looks for an xls file named test"""
df = pd.read_excel("messyData.xlsx")
df.set_index('id')


print('--------------------------------------------Print df before changes-----------------------------------------------')
print(df)
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('-----------------------------------------------Find blank names-----------*---------------------------------------')
nullNamesCheck = df.loc[(df['name'].isna())]
print('Search for blank names')

print(nullNamesCheck)
print('------------------------------------------------------------------------------------------------------------\n\n\n')


print('-----------------------------------Fill missing value from df for name column-------------------------------------')
df.loc[(df['id'] == 25) & (df['name'].isna()), 'name'] = 'Jarel'
df.loc[(df['id'] == 45) & (df['name'].isna()),  'name'] = 'Sammy'

print('Fill missing value from name column to specific names and show results')
print(df.loc[df['id'].isin([25, 45])])
print('------------------------------------------------------------------------------------------------------------\n\n\n')

# print('----------------------------------------sort df2 by id ------------------------------------------------------------')
df2 = df.sort_values(by=['id'])
# print('------------------------------------------------------------------------------------------------------------\n\n\n')


print('-------------------------------------Check null age column -------------------------------------------------------')
print('Before changing NaN age \n', df2.loc[(df2['age'].isnull())])

df2.loc[(df2['id'] == 14) & (df2['age'].isna()), 'age'] = 22
df2.loc[(df2['id'] == 29) & (df2['age'].isna()), 'age'] = 51

print('\nAfter changing NaN age to  \n', df.loc[df['id'].isin([22, 51])])
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('-----------------------------------Change age dtype from float to int---------------------------------------------')
df2['age'] = df2['age'].astype(int)
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('-----------------------------------Change age dtype from int to float---------------------------------------------')
# df2['salary'] = df2['salary'].astype(float)
print('------------------------------------------------------------------------------------------------------------\n\n\n')


print('-------------------------------------Check negative age column -------------------------------------------------------')
a = df2.loc[df2['id'] == 14]
b = df2.loc[(df2['id'] == 12)]
print('14 id \n', a)
print()
print('-5 value:\n', b)
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('-------------------------------Change -5 age value to non-negtive---------------------------------------------------')
df2.loc[(df2['id'] == 12) & (df2['age'] == -5), 'age'] = 35
print('-5 value changed 35:\n', df2.loc[(df2['id'] == 12)])
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('--------------------------------------Check for ages gt 66--------------------------------------------------------')
print('Age gt 66 \n ', df2.loc[df2['age'] > 66])
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('--------------------------------------Change all ages to 43--------------------------------------------------------')
df2.loc[(df2['age'] > 66), 'age'] = 43
print(df2.loc[df2['id'].isin([15, 42, 45])])
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('-----------------------------------------Change salary data type--------------------------------------------------')

df2['salary'] = pd.to_numeric(
    df2['salary'].replace('[^0-9\.-]', '', regex=True))
print(df2['salary'])

print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('--------------------------------------Check for salaries lt 20k--------------------------------------------------')

lessSalary = df2.loc[(df2['salary'] <= 20000)]
print(lessSalary)
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('----------------------------------------Change 5.0 salaries------------------------------------------------------')
newSalary = df2.loc[(df2['salary'] <= 20000), 'salary'] = 85359.98

print(df2.loc[df2['id'].isin([11])])
print('------------------------------------------------------------------------------------------------------------\n\n\n')

# print('----------------------------------------Change data type for join date-------------------------------------------')
# df2['join_date'] = pd.to_datetime(df2['join_date'])
# print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('--------------------------------------------Change incompatible dates------------------------------------------------------')
df2.loc[(df2['id'] == 1) & (df2['join_date'].isna()),
        'join_date'] = '1998-04-01'
df2.loc[(df2['id'] == 12) & (df2['join_date'].isna()),
        'join_date'] = '1999-12-01'
df2.loc[(df2['id'] == 23) & (df2['join_date'].isna()),
        'join_date'] = '2006-05-30'
df2.loc[(df2['id'] == 34) & (df2['join_date'].isna()),
        'join_date'] = '2025-09-30'
df2.loc[(df2['id'].isin([45, 56])) & (
    df2['join_date'].isna()), 'join_date'] = '2006-05-01'
df2.loc[(df2['id'].isin([8, 15, 22, 29, 50])) & (
    df2['join_date'] == '2018/13/01'), 'join_date'] = '2012/02/01'
df2.loc[(df2['id'].isin([36, 43])) & (df2['join_date']
                                      == '2018/13/01'), 'join_date'] = '2013/07/28'
df2.loc[(df2['id'].isin([57])) & (df2['join_date'] ==
                                  '2018/13/01'), 'join_date'] = '2017/06/06'

# df2.loc[(df2['join_date'] == '2018/13/01')]
print(df2.loc[(df2['join_date'] == '2018/13/01')]
      )
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('-------------------------------------replace / with - in join_date------------------------------------------------')
df2['join_date'] = df2['join_date'].str.replace('-', '/')
print('------------------------------------------------------------------------------------------------------------\n\n\n')

# print('-------------------------------------Change data type in join_date------------------------------------------------')
df2['join_date'] = pd.to_datetime(
    df2['join_date'], yearfirst=True, format='mixed')
# print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('----------------------------------------Remove duplicate id-------------------------------------------------------')
df2 = df2.drop_duplicates(keep='first')

print(df2.loc[df2['id'].isin([11])])
print('------------------------------------------------------------------------------------------------------------\n\n\n')

# print('----------------------------Making sure department names are consistent----------------------------------------')

df2['department'] = df2['department'].replace(to_replace=['Marketng', 'marketing', 'hr', 'sales', 'engineering'],
                                              value=['Marketing', 'Marketing', 'HR', 'Sales', 'Engineering'])
# print('------------------------------------------------------------------------------------------------------------\n\n\n')


print('--------------------------------Making sure active column is consistent--------------------------------------------')
df2.loc[(df2['id'].isin([8, 18, 21, 40, 47, 48, 53]))
        & (df2['active'].isnull()), 'active'] = True
df2.loc[(df2['id'].isin([55, 56, 59]))
        & (df2['active'].isnull()), 'active'] = False


df2['active'] = df2['active'].replace(to_replace=['no', 'yes', 'TRUE', 'FALSE'
                                                  ],
                                      value=['False', 'True', 'False', 'True'])
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('-------------------------------------replace incompatible performance_score---------------------------------------')
df2['performance_score'] = df2['performance_score'].replace(0.8, 0.81)
df2['performance_score'] = df2['performance_score'].replace('0.33/1', 0.33)
df2['performance_score'] = df2['performance_score'].replace('0.43/1', 0.43)
df2['performance_score'] = df2['performance_score'].replace('0.01/1', 0.01)
df2['performance_score'] = df2['performance_score'].replace('0.7/1', 0.07)

df2.loc[(df2['id'].isin([7, 42])) & (
    df2['performance_score'].isnull()), 'performance_score'] = 0.68
print('------------------------------------------------------------------------------------------------------------\n\n\n')


print('-------------------------------------Send df3 to renameDFR.xlsx---------------------------------------------------')
df2.to_excel('renameDF.xlsx', sheet_name='workers', index=False)
print('------------------------------------------------------------------------------------------------------------\n\n\n')


print('---------------------------------------------NaN notes---------------------------------------------------- -------')
df2.loc[(df2['id'].isin([2, 3,31,36, 59, 60])) & (
    df2['notes'].isnull()), 'notes'] = 'Late submissions'
df2.loc[(df2['id'].isin([4, 12, 14, 15, 28, 35, 36, 43, 53]))
        & (df2['notes'].isnull()), 'notes'] = 'Promoted'
df2.loc[(df2['id'].isin([6, 7, 25, 30, 61, 32, 48, 53])) & (
    df2['notes'].isnull()), 'notes'] = 'On leave'
df2.loc[(df2['id'].isin([56])) & (
    df2['notes'].isnull()), 'notes'] = 'Left company'
print('------------------------------------------------------------------------------------------------------------\n\n\n')


print('-----------------------------------Null values summary count------------------------------------------------------')
print('Null values summary count: \n\n', df2.isnull().sum())
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('-------------------------------------Columns data types-----------------------------------------------------------')
print(df2.dtypes)
print('------------------------------------------------------------------------------------------------------------\n\n\n')

print('------------------------------------------updated df--------------------------------------------------------------')
print(df2)
print('------------------------------------------------------------------------------------------------------------------')


print('Pandas version:', pd.__version__)
